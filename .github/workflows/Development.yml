name: Development

on:
  push:
    branches: [ "Development" ]
  pull_request:
    branches: [ "Development" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4.0.0
        with:
          dotnet-version: '8.0.x'

      - name: Restore NuGet packages
        run: dotnet restore ./NitroBoostMatchmakingService.sln

      - name: Build solution
        run: dotnet build ./NitroBoostMatchmakingService.sln -c Debug --no-restore

      - name: Upload build as artifact
        uses: actions/upload-artifact@v4
        with:
          name: dev-build
          path: ./NitroBoostMatchmakingService.Web/bin/Debug/net8.0

      - name: Upload tests as artifact
        uses: actions/upload-artifact@v4
        with:
          name: dev-test
          path: ./NitroBoostMatchmakingService.Test/bin/Debug/net8.0

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download existing build
        uses: actions/download-artifact@v4
        with:
          name: dev-build

      - name: Download tests for existing build
        uses: actions/download-artifact@v4
        with:
          name: dev-test

      - name: Run unit tests
        run: dotnet test NitroBoostMatchmakingService.Test.dll

  sonar:
    runs-on: windows-latest
    environment: Development
    needs: test
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4.0.0
        with:
          dotnet-version: '8.0.x'
        
      - name: Install dotnet code coverage tools
        run: dotnet tool install --global dotnet-coverage
          
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
          
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
          
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"B-A-Projects_NitroBoostMatchmakingService" /o:"b-a-projects" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet build ./NitroBoostMatchmakingService.sln -c Release
          dotnet-coverage collect 'dotnet test' -f xml  -o 'coverage.xml'
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  docker:
    runs-on: ubuntu-latest
    environment: Development
    needs: sonar
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/NitroBoostMatchmakingService
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
